{"meta":{"title":"RainFlee's blog","subtitle":null,"description":null,"author":"RainFlee","url":"http://yoursite.com","root":"/"},"pages":[{"title":"404 Not Found","date":"2019-04-29T05:26:45.230Z","updated":"2019-04-21T06:52:23.846Z","comments":true,"path":"404.html","permalink":"http://yoursite.com/404.html","excerpt":"","text":"404 Not Found 很抱歉，您访问的页面不存在可能是输入地址有误或该地址已被删除"},{"title":"","date":"2019-04-29T05:26:45.245Z","updated":"2019-04-20T05:49:16.186Z","comments":true,"path":"README.html","permalink":"http://yoursite.com/README.html","excerpt":"","text":"RaibFlee.github.io"},{"title":"所有标签","date":"2019-04-29T05:26:45.251Z","updated":"2019-04-22T07:28:18.400Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2019-04-29T05:26:45.236Z","updated":"2019-04-22T06:45:45.060Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"一名编程新手雨落成风csdn博客"},{"title":"所有分类","date":"2019-04-29T05:26:45.241Z","updated":"2019-04-22T06:34:36.112Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"","slug":"python方法和函数","date":"2019-05-05T08:34:34.716Z","updated":"2019-05-05T09:32:35.760Z","comments":true,"path":"2019/05/05/python方法和函数/","link":"","permalink":"http://yoursite.com/2019/05/05/python方法和函数/","excerpt":"","text":"在Python中，函数和方法其实是一个相对的概念，只不过方法会有一个默认参数self，但可以互相转化，也可以在创建实例后动态的添加。下面用代码演示：12345678910class A:#创建一个类 def print(self): print('A')a = A()print(type(a.print))#结果：&lt;class 'method'&gt;print(type(A.print))#结果：&lt;class 'function'&gt; 从代码中可以看出print()方法对于实例来说是个方法，而对于类来说只是一个函数。如果想要动态地添加方法和函数，可以直接指定。代码如下：12345678910111213141516class A:#创建一个类 def print(self): print('A')def print2(self):#创建一个函数 print('print2')a = A()a.print2=print2 #相当于a对象创建了一个print2属性，并将print2函数赋值给它，a.print2()#结果：print2print(type(a.print2))#结果：&lt;class 'function'&gt;#结果表明这样添加的是函数（并且只对a对象生效,类和其他对象无效） 如果对类直接赋值12345678910111213141516171819class A:#创建一个类 def print(self): print('A')def print2():#创建一个函数 print('print2')a = A()A.print2=print2A.print2()#结果：print2print(type(A.print2))#结果：&lt;class 'function'&gt;print(type(a.print2))#结果：&lt;class 'method'&gt;a.print2()#结果：TypeError: print2() takes 0 positional arguments but 1 was given 从代码中可以看出如果对类直接赋值，类增加了一个函数，而对象增加一个方法(所有对象都会有这个方法)，最后a对象执行报错，是因为方法会自动传入一个self参数，而原本的print2函数没有参数。 总结：我们判断是否为函数或方法，主要看执行时是否会自动传入一个参数。","categories":[],"tags":[]},{"title":"ideavim配置","slug":"ideavim配置","date":"2019-04-22T04:27:52.247Z","updated":"2019-04-26T07:21:08.887Z","comments":true,"path":"2019/04/22/ideavim配置/","link":"","permalink":"http://yoursite.com/2019/04/22/ideavim配置/","excerpt":"","text":"ideavim配置文件：.ideavimrc（UTF-8格式，纯文本文件） 存放路径：C:\\user\\用户名.ideavimrc123456789#替换查找noremap / :action Find&lt;CR&gt;#替换acejump,acejump是一个插件noremap u :action AceAction&lt;CR&gt;noremap U :action AceTargetAction&lt;CR&gt;&quot; 显示当前的模式set showmode&quot; 共享系统粘贴板set clipboard=unnamed","categories":[{"name":"软件","slug":"软件","permalink":"http://yoursite.com/categories/软件/"}],"tags":[{"name":"pycharm","slug":"pycharm","permalink":"http://yoursite.com/tags/pycharm/"}]},{"title":"my-first-blog","slug":"my-first-blog","date":"2019-04-20T05:51:46.000Z","updated":"2019-04-21T09:43:54.792Z","comments":true,"path":"2019/04/20/my-first-blog/","link":"","permalink":"http://yoursite.com/2019/04/20/my-first-blog/","excerpt":"","text":"hello github","categories":[],"tags":[]}]}