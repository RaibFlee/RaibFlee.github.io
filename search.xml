<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python方法和函数</title>
      <link href="/2019/05/05/python%E6%96%B9%E6%B3%95%E5%92%8C%E5%87%BD%E6%95%B0/"/>
      <url>/2019/05/05/python%E6%96%B9%E6%B3%95%E5%92%8C%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>在Python中，函数和方法其实是一个相对的概念，只不过方法会有一个默认参数self，但可以互相转化，也可以在创建实例后动态的添加。<br>下面用代码演示：<br><a id="more"></a><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span><span class="comment">#创建一个类</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'A'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = A()</span><br><span class="line">print(type(a.<span class="keyword">print</span>))</span><br><span class="line"><span class="comment">#结果：&lt;class 'method'&gt;</span></span><br><span class="line">print(type(A.<span class="keyword">print</span>))</span><br><span class="line"><span class="comment">#结果：&lt;class 'function'&gt;</span></span><br></pre></td></tr></table></figure></p><p>从代码中可以看出print()方法对于实例来说是个方法，而对于类来说只是一个函数。<br>如果想要动态地添加方法和函数，可以直接指定。代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span><span class="comment">#创建一个类</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'A'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print2</span><span class="params">(self)</span>:</span><span class="comment">#创建一个函数</span></span><br><span class="line">    print(<span class="string">'print2'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = A()</span><br><span class="line">a.print2=print2 <span class="comment">#相当于a对象创建了一个print2属性，并将print2函数赋值给它，</span></span><br><span class="line">a.print2()</span><br><span class="line"><span class="comment">#结果：print2</span></span><br><span class="line">print(type(a.print2))</span><br><span class="line"><span class="comment">#结果：&lt;class 'function'&gt;</span></span><br><span class="line"><span class="comment">#结果表明这样添加的是函数（并且只对a对象生效,类和其他对象无效）</span></span><br></pre></td></tr></table></figure></p><p>如果对类直接赋值<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>:</span><span class="comment">#创建一个类</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">print</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'A'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print2</span><span class="params">()</span>:</span><span class="comment">#创建一个函数</span></span><br><span class="line">    print(<span class="string">'print2'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = A()</span><br><span class="line">A.print2=print2</span><br><span class="line">A.print2()</span><br><span class="line"><span class="comment">#结果：print2</span></span><br><span class="line">print(type(A.print2))</span><br><span class="line"><span class="comment">#结果：&lt;class 'function'&gt;</span></span><br><span class="line">print(type(a.print2))</span><br><span class="line"><span class="comment">#结果：&lt;class 'method'&gt;</span></span><br><span class="line">a.print2()</span><br><span class="line"><span class="comment">#结果：TypeError: print2() takes 0 positional arguments but 1 was given</span></span><br></pre></td></tr></table></figure></p><p>从代码中可以看出如果对类直接赋值，类增加了一个函数，而对象增加一个方法(所有对象都会有这个方法)，最后a对象执行报错，是因为方法会自动传入一个self参数，而原本的print2函数没有参数。</p><h1 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h1><p>我们判断是否为函数或方法，主要看执行时是否会自动传入一个参数。</p>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Pyhon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ideavim配置</title>
      <link href="/2019/04/22/ideavim%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/04/22/ideavim%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="ideavim"><a href="#ideavim" class="headerlink" title="ideavim"></a>ideavim</h1><p>配置文件：.ideavimrc（UTF-8格式，纯文本文件）</p><p>存放路径：C:\user\用户名.ideavimrc<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#替换查找</span><br><span class="line">noremap / :action Find&lt;CR&gt;</span><br><span class="line">#替换acejump,acejump是一个插件</span><br><span class="line">noremap u :action AceAction&lt;CR&gt;</span><br><span class="line">noremap U :action AceTargetAction&lt;CR&gt;</span><br><span class="line">&quot; 显示当前的模式</span><br><span class="line">set showmode</span><br><span class="line">&quot; 共享系统粘贴板</span><br><span class="line">set clipboard=unnamed</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pycharm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my-first-blog</title>
      <link href="/2019/04/20/my-first-blog/"/>
      <url>/2019/04/20/my-first-blog/</url>
      
        <content type="html"><![CDATA[<p>hello github</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
